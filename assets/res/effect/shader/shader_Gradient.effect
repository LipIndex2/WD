// Copyright (c) 2017-2020 Xiamen Yaji Software Co., Ltd.
CCEffect %{
  techniques:
  - passes:
    - vert: sprite-vs:vert
      frag: sprite-fs:frag
      depthStencilState:
        depthTest: false
        depthWrite: false
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendDstAlpha: one_minus_src_alpha
      rasterizerState:
        cullMode: none
      properties:
        startColor: { value: [1.0, 1.0, 1.0, 1.0], editor: {type: color} }
        endColor: { value: [0.5, 0.6, 1.0, 1.0], editor: {type: color} }
        colorPos: {value: [0.0]}
}%

CCProgram sprite-vs %{
  precision highp float;
  #include <builtin/uniforms/cc-global>
  in vec3 a_position;
  in vec2 a_texCoord;
  in vec4 a_color;

  out vec2 uv0;

  vec4 vert () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;
    uv0 = a_texCoord;
    return pos;
  }
}%

CCProgram sprite-fs %{
  precision highp float;
  #include <builtin/internal/alpha-test>

  uniform Constant{
    vec4 startColor;
    vec4 endColor;
    float colorPos;
  };
  in vec2 uv0;
  vec4 frag () {
    vec4 o = vec4(1.0,1.0,1.0,1.0);
    #if USE_HORIZONTAL
      o *= mix(startColor, endColor, vec4(max(0.0,uv0.x-colorPos)));
    #endif

    #if USE_VERTICAL 
      o *= mix(startColor, endColor, vec4(max(0.0,uv0.y-colorPos)));
    #endif
    o.a = 1.0;
    ALPHA_TEST(o);
    return o;
  }
}%

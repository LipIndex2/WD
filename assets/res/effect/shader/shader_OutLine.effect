// Copyright (c) 2017-2020 Xiamen Yaji Software Co., Ltd.
CCEffect %{
  techniques:
  - passes:
    - vert: sprite-vs:vert
      frag: sprite-fs:frag
      depthStencilState:
        depthTest: false
        depthWrite: false
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendDstAlpha: one_minus_src_alpha
      rasterizerState:
        cullMode: none
      properties:
        outColor: { value: [1.0, 1.0, 1.0, 0.0], editor: {type: color} }
        width: {value: 1.0}
}%

CCProgram sprite-vs %{
  precision highp float;
  #include <builtin/uniforms/cc-global>
  in vec3 a_position;
  in vec2 a_texCoord;
  in vec4 a_color;

  out vec2 uv0;

  vec4 vert () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;
    uv0 = a_texCoord;
    return pos;
  }
}%

CCProgram sprite-fs %{
  precision highp float;
  #include <builtin/internal/alpha-test>
  #include <builtin/internal/embedded-alpha>

  uniform Constant{
    vec4 outColor;
    float width;
  };
  in vec2 uv0;
  #pragma builtin(local)
  layout(set = 2, binding = 11) uniform sampler2D cc_spriteTexture;
  vec4 frag () {
    vec4 o = CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);
    if(o.a < 0.5){
      vec4 o_offset = vec4(0.0);
      for(float i = 0.0;i < 32.0; i += 32.0 / 32.0){
          vec2 offset = vec2(sin(i),cos(i))*width;
          o_offset += CCSampleWithAlphaSeparated(cc_spriteTexture,uv0+offset);
      }
      o = (outColor *  smoothstep(0.0,1.0,o_offset.a)) ;
    }
    ALPHA_TEST(o);
    return o;
  }
}%
